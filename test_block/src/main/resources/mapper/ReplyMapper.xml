<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hapiweb.test_block.dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="COMMENT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    GENKEY, POST_GK, LEVEL, AUTHOR_GK, REPLY_TO_GK
  </sql>
  <sql id="Blob_Column_List">
    COMMENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply (GENKEY, POST_GK, LEVEL, 
      AUTHOR_GK, REPLY_TO_GK, COMMENT
      )
    values (#{genkey,jdbcType=VARCHAR}, #{postGk,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{authorGk,jdbcType=VARCHAR}, #{replyToGk,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        GENKEY,
      </if>
      <if test="postGk != null">
        POST_GK,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="authorGk != null">
        AUTHOR_GK,
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK,
      </if>
      <if test="comment != null">
        COMMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        #{genkey,jdbcType=VARCHAR},
      </if>
      <if test="postGk != null">
        #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.genkey != null">
        GENKEY = #{record.genkey,jdbcType=VARCHAR},
      </if>
      <if test="record.postGk != null">
        POST_GK = #{record.postGk,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        LEVEL = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.authorGk != null">
        AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      </if>
      <if test="record.replyToGk != null">
        REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        COMMENT = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      COMMENT = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    <set>
      <if test="postGk != null">
        POST_GK = #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        COMMENT = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=LONGVARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="COMMENT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    GENKEY, POST_GK, LEVEL, AUTHOR_GK, REPLY_TO_GK
  </sql>
  <sql id="Blob_Column_List">
    COMMENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply (GENKEY, POST_GK, LEVEL, 
      AUTHOR_GK, REPLY_TO_GK, COMMENT
      )
    values (#{genkey,jdbcType=VARCHAR}, #{postGk,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{authorGk,jdbcType=VARCHAR}, #{replyToGk,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        GENKEY,
      </if>
      <if test="postGk != null">
        POST_GK,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="authorGk != null">
        AUTHOR_GK,
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK,
      </if>
      <if test="comment != null">
        COMMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        #{genkey,jdbcType=VARCHAR},
      </if>
      <if test="postGk != null">
        #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.genkey != null">
        GENKEY = #{record.genkey,jdbcType=VARCHAR},
      </if>
      <if test="record.postGk != null">
        POST_GK = #{record.postGk,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        LEVEL = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.authorGk != null">
        AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      </if>
      <if test="record.replyToGk != null">
        REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        COMMENT = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      COMMENT = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    <set>
      <if test="postGk != null">
        POST_GK = #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        COMMENT = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=LONGVARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="COMMENT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    GENKEY, POST_GK, LEVEL, AUTHOR_GK, REPLY_TO_GK
  </sql>
  <sql id="Blob_Column_List">
    COMMENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply (GENKEY, POST_GK, LEVEL, 
      AUTHOR_GK, REPLY_TO_GK, COMMENT
      )
    values (#{genkey,jdbcType=VARCHAR}, #{postGk,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{authorGk,jdbcType=VARCHAR}, #{replyToGk,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        GENKEY,
      </if>
      <if test="postGk != null">
        POST_GK,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="authorGk != null">
        AUTHOR_GK,
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK,
      </if>
      <if test="comment != null">
        COMMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        #{genkey,jdbcType=VARCHAR},
      </if>
      <if test="postGk != null">
        #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.genkey != null">
        GENKEY = #{record.genkey,jdbcType=VARCHAR},
      </if>
      <if test="record.postGk != null">
        POST_GK = #{record.postGk,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        LEVEL = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.authorGk != null">
        AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      </if>
      <if test="record.replyToGk != null">
        REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        COMMENT = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      COMMENT = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    <set>
      <if test="postGk != null">
        POST_GK = #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        COMMENT = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=LONGVARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="COMMENT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    GENKEY, POST_GK, LEVEL, AUTHOR_GK, REPLY_TO_GK
  </sql>
  <sql id="Blob_Column_List">
    COMMENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply (GENKEY, POST_GK, LEVEL, 
      AUTHOR_GK, REPLY_TO_GK, COMMENT
      )
    values (#{genkey,jdbcType=VARCHAR}, #{postGk,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{authorGk,jdbcType=VARCHAR}, #{replyToGk,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        GENKEY,
      </if>
      <if test="postGk != null">
        POST_GK,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="authorGk != null">
        AUTHOR_GK,
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK,
      </if>
      <if test="comment != null">
        COMMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        #{genkey,jdbcType=VARCHAR},
      </if>
      <if test="postGk != null">
        #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hapiweb.test_block.entity.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.genkey != null">
        GENKEY = #{record.genkey,jdbcType=VARCHAR},
      </if>
      <if test="record.postGk != null">
        POST_GK = #{record.postGk,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        LEVEL = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.authorGk != null">
        AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      </if>
      <if test="record.replyToGk != null">
        REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        COMMENT = #{record.comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR},
      COMMENT = #{record.comment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set GENKEY = #{record.genkey,jdbcType=VARCHAR},
      POST_GK = #{record.postGk,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=INTEGER},
      AUTHOR_GK = #{record.authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{record.replyToGk,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    <set>
      <if test="postGk != null">
        POST_GK = #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        COMMENT = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=LONGVARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hapiweb.test_block.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="COMMENT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    GENKEY, POST_GK, LEVEL, AUTHOR_GK, REPLY_TO_GK
  </sql>
  <sql id="Blob_Column_List">
    COMMENT
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply (GENKEY, POST_GK, LEVEL, 
      AUTHOR_GK, REPLY_TO_GK, COMMENT
      )
    values (#{genkey,jdbcType=VARCHAR}, #{postGk,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{authorGk,jdbcType=VARCHAR}, #{replyToGk,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hapiweb.test_block.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        GENKEY,
      </if>
      <if test="postGk != null">
        POST_GK,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="authorGk != null">
        AUTHOR_GK,
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK,
      </if>
      <if test="comment != null">
        COMMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        #{genkey,jdbcType=VARCHAR},
      </if>
      <if test="postGk != null">
        #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    <set>
      <if test="postGk != null">
        POST_GK = #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        COMMENT = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=LONGVARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hapiweb.test_block.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.wglvzyx.mybatisredis.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.wglvzyx.mybatisredis.entity.Reply">
    <constructor>
      <idArg column="GENKEY" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="POST_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="LEVEL" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="AUTHOR_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REPLY_TO_GK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="COMMENT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    GENKEY, POST_GK, LEVEL, AUTHOR_GK, REPLY_TO_GK
  </sql>
  <sql id="Blob_Column_List">
    COMMENT
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from reply
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wglvzyx.mybatisredis.entity.Reply">
    insert into reply (GENKEY, POST_GK, LEVEL, 
      AUTHOR_GK, REPLY_TO_GK, COMMENT
      )
    values (#{genkey,jdbcType=VARCHAR}, #{postGk,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{authorGk,jdbcType=VARCHAR}, #{replyToGk,jdbcType=VARCHAR}, #{comment,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wglvzyx.mybatisredis.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        GENKEY,
      </if>
      <if test="postGk != null">
        POST_GK,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="authorGk != null">
        AUTHOR_GK,
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK,
      </if>
      <if test="comment != null">
        COMMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="genkey != null">
        #{genkey,jdbcType=VARCHAR},
      </if>
      <if test="postGk != null">
        #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wglvzyx.mybatisredis.entity.Reply">
    update reply
    <set>
      <if test="postGk != null">
        POST_GK = #{postGk,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=INTEGER},
      </if>
      <if test="authorGk != null">
        AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      </if>
      <if test="replyToGk != null">
        REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        COMMENT = #{comment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wglvzyx.mybatisredis.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR},
      COMMENT = #{comment,jdbcType=LONGVARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wglvzyx.mybatisredis.entity.Reply">
    update reply
    set POST_GK = #{postGk,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=INTEGER},
      AUTHOR_GK = #{authorGk,jdbcType=VARCHAR},
      REPLY_TO_GK = #{replyToGk,jdbcType=VARCHAR}
    where GENKEY = #{genkey,jdbcType=VARCHAR}
  </update>
</mapper>